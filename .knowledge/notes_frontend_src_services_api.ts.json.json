{"is_source_file": true, "format": "TypeScript", "description": "This file defines a lightweight API client for communicating with a REST API specifically for managing notes. It includes types for API methods, options, errors, utility functions for building query strings and retrieving auth tokens, and a core function to perform HTTP requests with proper headers, error handling, and response parsing.", "external_files": ["import.meta.env.PUBLIC_API_BASE_URL", "fetch"], "external_methods": ["localStorage.getItem", "fetch"], "published": ["ApiMethod", "ApiOptions", "ApiError", "apiRequest"], "classes": [], "methods": [{"name": "function buildQuery(params?: ApiOptions['params']): string { buildQuery", "description": "Constructs a URL query string from provided parameters.", "scope": "", "scopeKind": ""}, {"name": "function getToken(): string | null { getToken", "description": "Retrieves the auth token from local storage.", "scope": "", "scopeKind": ""}, {"name": "export async function apiRequest<T>(opts: ApiOptions): Promise<T> { apiRequest", "description": "Performs API request with configured headers, handles JSON encoding, error handling, and returns parsed response.", "scope": "", "scopeKind": ""}], "calls": ["buildQuery", "getToken", "fetch", "res.headers.get", "res.json", "res.text"], "search-terms": ["apiRequest", "ApiMethod", "ApiOptions", "REST API client", "authorization token"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "ApiError", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^export interface ApiError extends Error {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "ApiMethod", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^export type ApiMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "ApiOptions", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^export interface ApiOptions {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^const BASE_URL = import.meta.env.PUBLIC_API_BASE_URL;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "apiRequest", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^export async function apiRequest<T>(opts: ApiOptions): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "auth", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  auth?: boolean; \\/\\/ whether to include Authorization header$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  body?: unknown;$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "buildQuery", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^function buildQuery(params?: ApiOptions['params']): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "contentType", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  const contentType = res.headers.get('content-type') || '';$/", "language": "TypeScript", "kind": "constant", "scope": "apiRequest", "scopeKind": "function"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  details?: unknown;$/", "language": "TypeScript", "kind": "property", "scope": "ApiError", "scopeKind": "interface"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^    const err: ApiError = new Error($/", "language": "TypeScript", "kind": "constant", "scope": "apiRequest", "scopeKind": "function"}, {"_type": "tag", "name": "getToken", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^function getToken(): string | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  const headers: Record<string, string> = {$/", "language": "TypeScript", "kind": "constant", "scope": "apiRequest", "scopeKind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  headers?: Record<string, string>;$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "isJson", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  const isJson = contentType.includes('application\\/json');$/", "language": "TypeScript", "kind": "constant", "scope": "apiRequest", "scopeKind": "function"}, {"_type": "tag", "name": "method", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  method?: ApiMethod;$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "params", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  params?: Record<string, string | number | boolean | undefined>;$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  path: string;$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  const payload = isJson ? await res.json().catch(() => ({})) : await res.text();$/", "language": "TypeScript", "kind": "constant", "scope": "apiRequest", "scopeKind": "function"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  const q = new URLSearchParams();$/", "language": "TypeScript", "kind": "constant", "scope": "buildQuery", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  const res = await fetch(url, {$/", "language": "TypeScript", "kind": "constant", "scope": "apiRequest", "scopeKind": "function"}, {"_type": "tag", "name": "s", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  const s = q.toString();$/", "language": "TypeScript", "kind": "constant", "scope": "buildQuery", "scopeKind": "function"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  status?: number;$/", "language": "TypeScript", "kind": "property", "scope": "ApiError", "scopeKind": "interface"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^    const token = getToken();$/", "language": "TypeScript", "kind": "constant", "scope": "apiRequest", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-management-system-18024-18061/notes_frontend/src/services/api.ts", "pattern": "/^  const url = `${BASE_URL}${opts.path}${buildQuery(opts.params)}`;$/", "language": "TypeScript", "kind": "constant", "scope": "apiRequest", "scopeKind": "function"}], "hash": "0cd126f92e018c3e04e0a8f9eb2fa2dc", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/api.ts", "fields": [{"name": "export interface ApiError extends Error {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface ApiOptions {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "auth?: boolean; \\/\\/ whether to include Authorization header", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "body?: unknown;", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "details?: unknown;", "scope": "ApiError", "scopeKind": "interface", "description": "unavailable"}, {"name": "headers?: Record<string, string>;", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "method?: ApiMethod;", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "params?: Record<string, string | number | boolean | undefined>;", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "path: string;", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "status?: number;", "scope": "ApiError", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"19": ""}]}